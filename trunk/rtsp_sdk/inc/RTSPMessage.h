/*****************************************************************************
//	RTSP SDK Base Classes
//
//	RTSP Message class
//
//	description:
//		represents basic RTSP message
//
//	revision of last commit:
//		$Rev$
//	author of last commit:
//		$Author$
//	date of last commit:
//		$Date$
//
//	created by Argenet {argenet@sibears.org}
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
******************************************************************************/


#ifndef __RTSP_MESSAGE__H__
#define __RTSP_MESSAGE__H__


#include "Poco/Net/Net.h"
#include "Poco/Net/MediaType.h"
#include "Poco/Net/MessageHeader.h"

#include "rtsp_sdk.h"

using Poco::Net::MessageHeader;
using Poco::Net::MediaType;

namespace RTSP {

class RTSP_SDK_API RTSPMessage: public MessageHeader
	/// The base class for RTSPRequest and RTSPResponse.
	///
	/// Defines the common properties of all RTSP messages.
	/// These are RTSP version, content length and content type
{
public:
	void setVersion(const std::string& version);
		/// Sets the RTSP version for this message.
		
	const std::string& getVersion() const;
		/// Returns the RTSP version for this message.
		
	void setContentLength(int length);
		/// Sets the Content-Length header.
		///
		/// If length is UNKNOWN_CONTENT_LENGTH, removes
		/// the Content-Length header.
		
	int getContentLength() const;
		/// Returns the content length for this message,
		/// which may be UNKNOWN_CONTENT_LENGTH if
		/// no Content-Length header is present.
		
	void setContentType(const std::string& mediaType);
		/// Sets the content type for this message.
		///
		/// Specify NO_CONTENT_TYPE to remove the
		/// Content-Type header.
		
	void setContentType(const MediaType& mediaType);	
		/// Sets the content type for this message.
		
	const std::string& getContentType() const;
		/// Returns the content type for this message.
		///
		/// If no Content-Type header is present, 
		/// returns UNKNOWN_CONTENT_TYPE.	

	static const std::string RTSP_1_0;

	static const int         UNKNOWN_CONTENT_LENGTH;
	static const std::string UNKNOWN_CONTENT_TYPE;
	
	static const std::string CONTENT_LENGTH;
	static const std::string CONTENT_TYPE;
	static const std::string CONNECTION;
	
	static const std::string CONNECTION_CLOSE;

protected:
	RTSPMessage();
		/// Creates the RTSPMessage with version RTSP/1.0.

	RTSPMessage(const std::string& version);
		/// Creates the RTSPMessage and sets
		/// the version.

	virtual ~RTSPMessage();
		/// Destroys the RTSPMessage.
	
private:
	RTSPMessage(const RTSPMessage&);
	RTSPMessage& operator = (const RTSPMessage&);
	
	std::string _version;
};


//
// inlines
//
inline const std::string& RTSPMessage::getVersion() const
{
	return _version;
}

} // namespace RTSP

#endif // __RTSP_MESSAGE__H__
