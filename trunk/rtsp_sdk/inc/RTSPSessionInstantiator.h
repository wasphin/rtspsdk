/*****************************************************************************
//	RTSP SDK Base Classes
//
//	RTSP Client Sessions Instantiator Class
//
//	description:
//		represents RTSP client sessions instances creator
//
//	revision of last commit:
//		$Rev$
//	author of last commit:
//		$Author$
//	date of last commit:
//		$Date$
//
//	created by Argenet {argenet@sibears.org}
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
******************************************************************************/


#ifndef __RTSP_SESSION_INSTANTIATOR__H__
#define __RTSP_SESSION_INSTANTIATOR__H__


#include "Poco/Net/Net.h"
#include "Poco/URI.h"

#include "rtsp_sdk.h"
#include "RTSPSession.h"


namespace RTSP {


class RTSPClientSession;


class RTSP_SDK_API RTSPSessionInstantiator
	/// A factory for RTSPClientSession objects.
	///
	/// Creates a RTSP session for a given URI.
	/// A RTSPSessionInstantiator is not used directly.
	/// Instances are registered with a RTSPSessionFactory,
	/// and used through it.
{
public:
	RTSPSessionInstantiator();
		/// Creates the RTSPSessionInstantiator.

	virtual ~RTSPSessionInstantiator();
		/// Destroys the RTSPSessionInstantiator.

	virtual RTSPClientSession* createClientSession(const Poco::URI& uri);
		/// Creates a RTSPClientSession for the given URI.

	static void registerInstantiator();
		/// Registers the instantiator with the global HTTPSessionFactory.

	static void unregisterInstantiator();
		/// Unregisters the factory with the global HTTPSessionFactory.

	void setProxy(const std::string& host, Poco::UInt16 port);
		/// Sets the proxy host and port.
		/// Called by RTSPSessionFactory.

protected:

	const std::string& proxyHost() const;
		/// Returns the proxy post.

	Poco::UInt16 proxyPort() const;
		/// Returns the proxy port.

private:
	std::string  _proxyHost;
	Poco::UInt16 _proxyPort;
	
};


//
// inlines
//
inline const std::string& RTSPSessionInstantiator::proxyHost() const
{
	return _proxyHost;
}


inline Poco::UInt16 RTSPSessionInstantiator::proxyPort() const
{
	return _proxyPort;
}


} // namespace RTSP


#endif // __RTSP_SESSION_INSTANTIATOR__H__
