/*****************************************************************************
//	SDP Parser Classes
//
//	RTP/AVP Constants
//
//	revision of last commit:
//		$Rev$
//	author of last commit:
//		$Author$
//	date of last commit:
//		$Date$
//
//	created by Argenet {argenet@sibears.org}
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
******************************************************************************/

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//	Includes
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#include "RtpAvpConstants.h"

namespace SDP {

	const std::string RtpAvpConstants::RESERVED			= "0";
	const std::string RtpAvpConstants::UNASSIGNED		= "35";
	const std::string RtpAvpConstants::DYNAMIC			= "-35";
	const std::string RtpAvpConstants::RTP_AVP			= "RTP/AVP";
	const std::string RtpAvpConstants::RTPMAP			= "rtpmap";
	const std::string RtpAvpConstants::FMTP				= "fmtp";
	const std::string RtpAvpConstants::CONTROL			= "control";
	const std::string RtpAvpConstants::avpTypeNames[]	=
	{
		"PCMU",
        "1016", 
        "G721", 
        "GSM",  
        "G723",  
        "DVI4_8000",      
        "DVI4_16000",     
        "LPC",       
        "PCMA",    
        "G722",      
        "L16_2CH",    
        "L16_1CH",     
        "QCELP",
        "CN",
        "MPA", 
        "G728",
        "DVI4_11025",
        "DVI4_22050",
        "G729",
        "CN_DEPRECATED",
        //"H263",
        "UNASSIGNED",
        "UNASSIGNED",
        "UNASSIGNED",
        "UNASSIGNED",
        "UNASSIGNED",
        "CelB",
        "JPEG",
        "UNASSIGNED",
        "nv",
        "UNASSIGNED",
        "UNASSIGNED",
        "H261",
        "MPV",
        "MP2T",
        "H263",
    };

	const int RtpAvpConstants::avpClockRates[] = 
	{ 
		8000,
        8000, 
        8000, 
        8000,  
        8000,  
        8000,      
        16000,     
        8000,       
        8000,    
        8000,      
        44100,    
        44100,
        -1,
        -1,
        90000, 
        8000,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        90000,
        90000,
        -1,
        90000,
        -1,
        -1,
        90000,
        90000,
        90000,
        -1
    };

	const int avpChannels[] = 
	{
		1,
		1, 
		1, 
		1,  
		1,  
		1,      
		1,     
		1,       
		1,    
		1,      
		2,    
		1,
		-1,
		-1,
		1, 
		1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
		-1,
     };

} //	namespace SDP