/*****************************************************************************
//	SDP Parser Classes
//
//	NTP Time Class
//
//	description:
//		used for converting DateTimes and TimeSpans to and from NTP timestamps
//
//	revision of last commit:
//		$Rev$
//	author of last commit:
//		$Author$
//	date of last commit:
//		$Date$
//
//	created by Argenet {argenet@sibears.org}
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
******************************************************************************/

#ifndef __NTP_TIME__H__
#define __NTP_TIME__H__

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//	Includes
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//	PoCo headers
#include "Poco/types.h"
#include "Poco/DateTime.h"
#include "Poco/Timespan.h"

#include "sdp_parser.h"
#include "common.h"

namespace SDP {

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//	Definitions and macroses
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#define NTPCONST	(2208988800)
// The seconds difference between NTP Time and UNIX Time

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//	NTPTime class
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class SDP_PARSER_API NTPTime
	/// A helper class for converting DateTimes and TimeSpans
	/// to and from NTP timestamps.
{
public:

	static Poco::Int64 getNTPTime(const Poco::DateTime & date);
	/// Converts a DateTime to an NTP timestamp.

	static Poco::Int64 getNTPTime(const Poco::Timespan & timespan);
	/// Converts a Timespan to an NTP timestamp.

	static Poco::DateTime getDateTime(Poco::Int64 ntpTime);
	/// Converts an NTP timestamp to a DateTime.

	static Poco::Timespan getTimeSpan(const std::string & typedTimeString);
	/// Converts time in the Typed Time format to a Time Span.
	/// 
	/// RFC 2327 says:
	/// The syntax for [Typed Time] is a number immediately followed by a single 
	/// case-sensitive character. Fractional units are not allowed - a 
	/// smaller unit should be used instead.  The following unit specification 
	/// characters are allowed:
	///   - d - days (86400 seconds)
	///   - h - minutes (3600 seconds)
	///   - m - minutes (60 seconds)
	///   - s - seconds (allowed for completeness but not recommended)
	/// 
	/// For example:
	///   0d 2h 30m

	static Poco::Timespan getTimeSpan(Poco::Int64 ntpTime);
	/// Converts an NTP timestamp to a TimeSpan.

/*
	//	TODO: needs NTPClient to be implemented (optional functionality)
	static Poco::Int64 GetTime();
	/// Gets the current time in seconds since January 1, 1900.
*/

private:

	static Poco::DateTime epoch;
};

} //	namespace SDP

#endif	//	__NTP_TIME__H__