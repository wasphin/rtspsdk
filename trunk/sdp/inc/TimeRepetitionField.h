/*****************************************************************************
//	SDP Parser Classes
//
//	Time Repetition Field Class
//
//	description:
//		represents SDP description time repetition field
//
//	revision of last commit:
//		$Rev$
//	author of last commit:
//		$Author$
//	date of last commit:
//		$Date$
//
//	created by Argenet {argenet@sibears.org}
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
******************************************************************************/

#ifndef __TIME_REPETITION_FIELD__H__
#define __TIME_REPETITION_FIELD__H__

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//	Includes
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//	PoCo headers
#include "Poco/Timespan.h"

#include "sdp_parser.h"
#include "common.h"
#include "Field.h"

namespace SDP {

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//	Definitions
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

typedef std::vector<Poco::Timespan> TimespanVec;

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//	TimeRepetitionField class
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class SDP_PARSER_API TimeRepetitionField : public Field
	/// This class contains details regarding the repetition of a given time.
{
public:

	TimeRepetitionField();
	/// Creates an empty TimeRepetitionField.

	TimeRepetitionField(const std::string & value);
	/// Creates a new TimeRepetitionField according to the specified value string.

	TimeRepetitionField(const Poco::Timespan & interval,
						const Poco::Timespan & activeTime);
	/// Instantiates a new TimeRepetition with the specified interval between
	/// repetitions and the time the session is active during each repetition.

	TimeRepetitionField(const Poco::Timespan & interval,
						const Poco::Timespan & activeTime,
						const TimespanVec & offsets);
	/// Instantiates a new TimeRepetition with the specifed interval between repetitions,
	/// the time the session is active during each repetitionand a list of offsets from
	/// the beginning of the interval during which the session will be considered active.

	TimeRepetitionField(const TimeRepetitionField & timeRepetitionField);
	/// Creates a copy of specified TimeRepetitionField object.

	TimeRepetitionField & operator=(const TimeRepetitionField & timeRepetitionField);
	/// Copies the specified TimeRepetitionField object.

	Poco::Timespan getInterval() const;
	/// Gets the interval of time between repetitions.

	Poco::Timespan getActiveTime() const;
	/// Gets the time the session will be active during each repetition.

	TimespanVec getOffsets() const;
	/// If multiple dates within an interval need to be repeated, this gets a
	/// list of offsets from the beginning of each interval for each time. Default is
	/// 0h, which is the start of the interval.

private:

	std::string formatString(const Poco::Timespan & interval,
							 const Poco::Timespan & activeTime);
	/// Builds a value string representing the time repetition field  content.

	std::string formatString(const Poco::Timespan & interval,
							 const Poco::Timespan & activeTime,
							 const TimespanVec & offests);
	/// Builds a value string representing the time repetition field  content.

	Poco::Timespan			_interval;
	Poco::Timespan			_activeTime;
	TimespanVec				_offsets;
};

} //	namespace SDP

#endif	//	__TIME_REPETITION_FIELD__H__

