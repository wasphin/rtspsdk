/*****************************************************************************
//	SDP Parser Classes
//
//	Phone Field Class
//
//	description:
//		represents SDP description time zone adjustment field
//
//	revision of last commit:
//		$Rev$
//	author of last commit:
//		$Author$
//	date of last commit:
//		$Date$
//
//	created by Argenet {argenet@sibears.org}
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
******************************************************************************/

#ifndef __TIME_ZONE_ADJUSTMENT_FIELD__H__
#define __TIME_ZONE_ADJUSTMENT_FIELD__H__

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//	Includes
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#include "sdp_parser.h"
#include "common.h"
#include "TimeZoneAdjustment.h"
#include "Field.h"

namespace SDP {

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//	Definitions and macroses
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

typedef std::vector<TimeZoneAdjustment> TimeZoneAdjustmentVec;

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//	TimeZoneAdjustmentField class
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class SDP_PARSER_API TimeZoneAdjustmentField : public Field
    /// This represents the z= field of RFC 2327. From RFC 2327:
    /// 
    /// To schedule a repeated session which spans a change from daylight-
    /// saving time to standard time or vice-versa, it is necessary to
    /// specify offsets from the base repeat times. This is required
    /// because different time zones change time at different times of day,
    /// different countries change to or from daylight time on different
    /// dates, and some countries do not have daylight saving time at all.
    /// 
    /// Thus in order to schedule a session that is at the same time winter
    /// and summer, it must be possible to specify unambiguously by whose
    /// time zone a session is scheduled.  To simplify this task for
    /// receivers, we allow the sender to specify the NTP time that a time
    /// zone adjustment happens and the offset from the time when the
    /// session was first scheduled.  The "z" field allows the sender to
    /// specify a list of these adjustment times and offsets from the base time.
    /// 
    /// An example might be:
    /// 
    ///     z=2882844526 -1h 2898848070 0
    /// 
    /// This specifies that at time 2882844526 the time base by which the
    /// session's repeat times are calculated is shifted back by 1 hour,
    /// and that at time 2898848070 the session's original time base is
    /// restored. Adjustments are always relative to the specified start
    /// time - they are not cumulative.
{
public:

	TimeZoneAdjustmentField();
	/// Creates an empty TimeZoneAdjustmentField.

	TimeZoneAdjustmentField(const std::string & value);
	/// Creates a new TimeZoneAdjustmentField according to the specified value string.

	TimeZoneAdjustmentField(const TimeZoneAdjustmentField & timeZoneAdjustmentField);
	/// Creates a copy of specified TimeZoneAdjustmentField object.

	TimeZoneAdjustmentField & operator=(const TimeZoneAdjustmentField & timeZoneAdjustmentField);
	/// Copies the specified TimeZoneAdjustmentField object.

	TimeZoneAdjustmentVec getZoneAdjustments() const;
	/// Gets a list of TimeZoneAdjustments.

private:

	TimeZoneAdjustmentVec		_zoneAdjustments;

};

} //	namespace SDP

#endif	//	__TIME_ZONE_ADJUSTMENT_FIELD__H__